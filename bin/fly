#!/bin/bash

set -e

if [ "$1" == "show" ]; then
  if [ "$2" != "" ]; then
    cat $2
  fi
  exit 0
fi

echo "Fly Container Package Manager"
echo "Version $FLY_VERSION"
echo "----------------------------------------------------------------"
echo "Package:"
echo "  Group:                $GROUP"
echo "  Application:          $APPLICATION"
echo "  Version:              $VERSION"
echo "  Revision:             $REVISION"
echo "  Description:          $DESCRIPTION"
echo "  Company:              $COMPANY"
echo "  Web:                  $WEB"
echo "  Repository:           $REPOSITORY"
echo "  Branch:               $BRANCH"
echo "  Commit:               $COMMIT"
echo "  Commit Time:          $COMMIT_TIME"
echo "  Commit Author:        $COMMIT_AUTHOR"
echo "  Commit Author Email:  $COMMIT_AUTHOR_EMAIL"
echo "  Build:                $BUILD"
echo "  Build Time:           $BUILD_TIME"
echo "----------------------------------------------------------------"
echo "Config:"
for CONF in /conf/*; do
  echo "  - $CONF";
done
echo "----------------------------------------------------------------"
echo "Stage:"
cd /act
for STAGE in *; do
  echo "  * $STAGE";
  if [ "$STAGE" != "*" ]; then
    echo "      Action:"
    cd /act/$STAGE
    for ACT in *; do
      echo "        $ACT"
    done
    echo "      Parameters:"
    for PARAM in /param/$STAGE/*; do
      echo "        - $PARAM";
    done
  fi
done
cd /pack
echo "----------------------------------------------------------------"

if [ "$1" == "fly" ]; then
  if [ "$2" != "all" ]; then
    echo "fly:"
    echo "  Stage: $2"
    echo "  Action: $3"
    echo "  Arguments: ${@:4}"
    echo ""
    cd /pack/$2
    /act/$2/$3 ${@:4}
    echo "----------------------------------------------------------------"
  else
    cd /act
    for STAGE in *; do
      echo "fly:"
      echo "  Stage: $STAGE"
      echo "  Action: $3"
      echo "  Arguments: ${@:4}"
      echo ""
      cd /pack/$STAGE
      /act/$STAGE/$3 ${@:4}
      echo "----------------------------------------------------------------"
    done
    cd /pack
  fi
elif [ "$1" == "save" ]; then
  echo "save:"
  if [ "$2" != "" ]; then
    tar -czf /out/$3 -C $2 .
    echo "  Directory: $2"
    echo "  File: /out/$3"
  fi
elif [ "$1" == "create" ]; then
  echo "create:"
  if [ "$2" != "" ]; then
    if [ "$3" != "" ]; then
      for STAGE in "${@:4}"; do
        mkdir -p /templ/act/$STAGE /templ/pack/$STAGE /templ/param/$STAGE
      done
      tar -czf /out/$3.tar.gz -C /templ .
      echo "  Group: $2"
      echo "  Application: $3"
      echo "  File: /out/$3.tar.gz"
    fi
  fi
elif [ "$1" == "shell" ]; then
  echo "shell:"
  /bin/bash ${@:2}
else
  echo "help:"
  echo "  Command:"
  echo "    fly    - run an action on the specified/all stage(s):"
  echo "             docker run -it -v \$PWD/conf:/conf -v \$PWD/param:/param IMAGE fly STAGE ACTION [ARGUMENTS]"
  echo "             docker run -it -v \$PWD/conf:/conf -v \$PWD/param:/param IMAGE fly all ACTION [ARGUMENTS]"
  echo ""
  echo "    show   - output the contents of the specified file:"
  echo "             docker run -it IMAGE show FILE"
  echo ""
  echo "    save   - tar the contents of the specified directory to /out/FILE:"
  echo "             docker run -it -v \$PWD/out:/out IMAGE save DIRECTORY FILE"
  echo ""
  echo "    create - create a new package in /out/APPLICATION.tar.gz:"
  echo "             docker run -it -v \$PWD/out:/out IMAGE create GROUP APPLICATION [STAGES]"
  echo ""
  echo "    shell  - enter an interactive shell:"
  echo "             docker run -it IMAGE bash [ARGUMENTS]"
  echo ""
  echo "    help   - get this help:"
  echo "             docker run -it IMAGE help"
  if [ $# -eq 0 ] || [ "$1" == "help" ]; then
    echo ""
  else
    echo ""
    echo "Unknown command: $1"
    echo ""
  fi
fi
